Group gSenseo (FK,Whg)

String FK_Senseo_Debug         "SenseoWifi Debug [%s]"        <light>  (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/debug:state:default]" }
String FK_Senseo_OpState       "SenseoWifi Zustand [%s]"      <light>  (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/opState:state:MAP(senseo-wifi.map)]" }
Switch FK_Senseo_OnOff         "SenseoWifi OnOff"             <switch> (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/power:state:default], >[broker:homie/senseo-w66a/machine/power/set:command:*:default]" }
String FK_Senseo_Brew          "SenseoWifi Brew"              <switch> (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/brew:state:default], >[broker:homie/senseo-w66a/machine/brew/set:command:*:default]" }
Number FK_Senseo_BrewedSize    "SenseoWifi BrewedSize [%d]"   <light>  (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/brewedSize:state:default]" }
Switch FK_Senseo_OutOfWater    "SenseoWifi OutOfWater"        <light>  (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/outOfWater:state:MAP(senseo-wifi.map)]" }
String FK_Senseo_Recipe        "SenseoWifi Recipe"            <light>  (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/recipe:state:default], >[broker:homie/senseo-w66a/machine/recipe/set:command:*:default]" }
Switch FK_Senseo_CupAvailable  "SenseoWifi Tasse vorh."       <light>  (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/cupAvailable:state:MAP(senseo-wifi.map)]" }
Switch FK_Senseo_CupFull       "SenseoWifi Tasse voll"        <light>  (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/machine/cupFull:state:MAP(senseo-wifi.map)]" }
Switch FK_Senseo_Unreach       "SenseoWifi Unreach"           <light>  (FK,gSenseo) { mqtt="<[broker:homie/senseo-w66a/$online:state:MAP(unreach.map)]" }
            
// vim: syntax=Xtend
