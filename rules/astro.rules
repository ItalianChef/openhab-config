
val String filename = "astro.rules"

rule "OpenHAB system started - astro"
when
  System started
then
  createTimer(now.plusSeconds(180)) [|
    logInfo(filename, "--> astro init")
    if (now.isAfter((Sunset_Time.state as DateTimeType).calendar.timeInMillis) ||
      now.isBefore((Sunrise_Time.state as DateTimeType).calendar.timeInMillis)
    ) {
      logInfo(filename, "--> Night_State ON")
      postUpdate(Night_State, ON)
    } else {
      logInfo(filename, "--> Night_State OFF")
      postUpdate(Night_State, OFF)
    }
  ]
end

rule "Update Night_State"
when
  Item Sun_Elevation changed
then
  if(Sun_Elevation.state >  0){
    if(Night_State.state != OFF){
      logInfo(filename, "--> Sun is crossing the horizon, switching to daylight mode")
      postUpdate(Night_State, OFF)
    }
  } else {
    if(Night_State.state != ON) {
      logInfo(filename, "--> Sun is crossing the horizon, switching to night mode")
      postUpdate(Night_State, ON)
    }
  }
end

// vim: syntax=Xtend
