import org.openhab.core.library.types.*
//import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
//import org.joda.time.*
import java.math.BigDecimal
import java.util.Locale
import org.openhab.core.library.types.*

var String rulename = "--> Heizungssteuerung BD_Heizung: "

// How to Duplicate:
// Search and replace "BD_" --> "WZ_" 

rule "BD_Heizung set heating from sitemap preset element"
when
  Item BD_Heizung_Preset received command
then {
	logInfo("RULE", rulename + "Schnellauswahl (Sitemap -> Homematic)")
	switch (receivedCommand){
		case 0: BD_Heizung_Lowering.sendCommand(ON)
		case 1: BD_Heizung_Comfort.sendCommand(ON)
	}
	createTimer(now.plusSeconds(1)) [|
		BD_Heizung_Preset.postUpdate(-1)
	]
}
end

rule "BD_Heizung set mode from sitemap select element"
when
  Item BD_Heizung_SetMode received command
then {
	logInfo("RULE", rulename + "Modus (Sitemap -> Homematic)")
	switch (receivedCommand){
		case 0: BD_Heizung_Auto.sendCommand(ON)
		case 1: BD_Heizung_Manu.sendCommand(BD_Heizung_SetTemp.state as DecimalType)
		case 2: BD_Heizung_BoostMode.sendCommand(ON)
		case 3: BD_Heizung_SetMode.postUpdate(-1)
	}
}
end

rule "BD_Heizung update sitemap with window mode"
when
  Item BD_Fenster_State received update
then {
	createTimer(now.plusSeconds(15)) [|
		//logInfo("RULE", rulename + "Fenster-Modus <" + BD_Fenster_State.state + "><" + BD_Heizung_SetTemp.state + ">")
		if (BD_Fenster_State.state == OPEN && BD_Heizung_SetTemp.state == 12.0) {
			//logInfo("RULE", rulename + "Fenster-Modus aktiviert")
			BD_Heizung_SetMode.postUpdate(3)
		} else if (BD_Fenster_State.state == CLOSED && BD_Heizung_SetTemp.state != 12.0) {
			//logInfo("RULE", rulename + "Fenster-Modus deaktiviert")
			BD_Heizung_SetMode.postUpdate(BD_Heizung_Mode.state)
		} else {
			logError("RULE", rulename + "Fenster-Modus nicht eindeutig")
			BD_Heizung_SetMode.postUpdate(BD_Heizung_Mode.state)
		}
	]	
}	
end

rule "BD_Heizung update sitemap with heating mode"
when
  Item BD_Heizung_Mode received update
then {
	//logInfo("RULE", rulename + "Modus (Homematic -> Sitemap)")
	// Fenster-Modus pruefen: Wenn Auswahl auf "F" und update auf "A", nichts tun
	if (BD_Heizung_SetMode.state == 3 && BD_Heizung_Mode.state == 0) {
		//logInfo("RULE", rulename + "Modus (Homematic -> Sitemap) kein Update da Fenster-Modus")
	} else {
		BD_Heizung_SetMode.postUpdate(BD_Heizung_Mode.state)
	}
}	
end

rule "BD_Heizung create summary"
when
	Item BD_Heizung_SetTemp changed or
	Item BD_Heizung_ActTemp changed or
	Item BD_Heizung_Valve changed or
	Item BD_Heizung_SetMode changed
then {
	if ((BD_Heizung_SetTemp.state instanceof DecimalType) && (BD_Heizung_ActTemp.state instanceof DecimalType)) {	
		var BigDecimal setTemp = (BD_Heizung_SetTemp.state as DecimalType).toBigDecimal
		var BigDecimal actTemp = (BD_Heizung_ActTemp.state as DecimalType).toBigDecimal
		var String mode = ""
		if (BD_Heizung_SetMode.state == 0) mode = "A"
		else if (BD_Heizung_SetMode.state == 1) mode = "M"
		else if (BD_Heizung_SetMode.state == 2) mode = "ðŸ”¥"
		
		if (BD_Heizung_Valve.state > 60) {
			BD_Heizung_Summary.postUpdate(String::format("( âŸ° %.1f Â°C)  %s  %.1f Â°C", setTemp, mode, actTemp))
		} else if (BD_Heizung_Valve.state > 40) {
			BD_Heizung_Summary.postUpdate(String::format("( â¤Š %.1f Â°C)  %s  %.1f Â°C", setTemp, mode, actTemp))
		} else if (BD_Heizung_Valve.state > 20) {
			BD_Heizung_Summary.postUpdate(String::format("( â‡ˆ %.1f Â°C)  %s  %.1f Â°C", setTemp, mode, actTemp))
		} else if (BD_Heizung_Valve.state > 0) {
			BD_Heizung_Summary.postUpdate(String::format("( â†‘ %.1f Â°C)  %s  %.1f Â°C", setTemp, mode, actTemp))
		} else {
			if (BD_Heizung_SetMode.state == 1) {
				BD_Heizung_Summary.postUpdate(String::format("( â‡… M)  %.1f Â°C", setTemp, mode, actTemp))
			} else if (BD_Heizung_SetMode.state == 3) {
				BD_Heizung_Summary.postUpdate(String::format("( â†» Fenster offen)  %.1f Â°C", actTemp))
			} else {
				BD_Heizung_Summary.postUpdate(String::format("%.1f Â°C", actTemp))
			}
		}
	} else {
		BD_Heizung_Summary.postUpdate("(unbekannt)")
	}
}
end








